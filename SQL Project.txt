Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = Primary: 10000
ii. Hours = Business_ID: 1,562
iii. Category = Business_ID:2,643
iv. Attribute = Business_ID:1,115
v. Review = 10000, Business_ID: 8090, User_ID: 9581
vi. Checkin = Business_ID: 493
vii. Photo = 10000, Business_ID: 6493
viii. Tip = 10000, Business_ID: 3,979, User_ID: 537
ix. User = 10000
x. Friend = User_ID: 11
xi. Elite_years = User_ID: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	No
	
	SQL code used to arrive at answer:
	
	SELECT
	* 
	FROM User

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995
		


5. List the cities with the most reviews in descending order:

Tables are missing data.  Join for this only has 636 Records.

	SQL code used to arrive at answer:

SELECT 

B.City,
COUNT(DISTINCT R.id) as Reviews

FROM Review R
LEFT JOIN Business B on B.id=R.Business_ID

WHERE
B.ID is not null

GROUP BY B.City
ORDER BY Reviews DESC

	
	Copy and Paste the Result Below:
	 city            | Reviews |
+-----------------+---------+
| Las Vegas       |     193 |
| Phoenix         |      65 |
| Toronto         |      51 |
| Scottsdale      |      37 |
| Henderson       |      30 |
| Tempe           |      28 |
| Pittsburgh      |      23 |
| Chandler        |      22 |
| Charlotte       |      21 |
| Montréal        |      18 |
| Madison         |      16 |
| Gilbert         |      13 |
| Mesa            |      13 |
| Cleveland       |      12 |
| North Las Vegas |       6 |
| Edinburgh       |       5 |
| Glendale        |       5 |
| Lakewood        |       5 |
| Cave Creek      |       4 |
| Champaign       |       4 |
| Markham         |       4 |
| North York      |       4 |
| Mississauga     |       3 |
| Surprise        |       3 |
| Avondale        |       2 |
+-----------------+---------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon



SQL code used to arrive at answer:

SELECT 

B.Stars,
COUNT(DISTINCT B.ID) as Count

FROM Business B

WHERE B.City = 'Avon'

GROUP BY B.City,B.Stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-------+
| stars | Count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

ii. Beachwood


SQL code used to arrive at answer:
SELECT 

B.Stars,
COUNT(DISTINCT B.ID) as Count

FROM Business B

WHERE B.City = 'Beachwood'

GROUP BY B.City,B.Stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		

+-------+-------+
| stars | Count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT 
name,
review_count

FROM user

order by review_count desc
limit 3
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
Yes, they are correlated.  The average review count is 24.3 and avg number of fans is 1.5.  Those with the most fans have review counts in the hundreds.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	Love
	
	SQL code used to arrive at answer:
SELECT 
CASE WHEN "text" like "%love%" THEN "Love"
  WHEN "text" like "%hate%" THEN "Hate"
  ELSE "Other" END As Reaction,
COUNT(ID)
FROM Review

GROUP BY Reaction
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT 
name,
fans

FROM User

ORDER BY fans desc
limit 10	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
SELECT 
name,
(sum(useful)+sum(funny))/sum(review_count) as Correlation


From User


WHERE name in (SELECT 
name
FROM User
ORDER BY fans desc
limit 10)

GROUP BY 
name

ORDER BY Correlation DESC	

	Copy and Paste the Result Below:
	
+-----------+-------------+
| name      | Correlation |
+-----------+-------------+
| Harald    |         211 |
| Fran      |          20 |
| William   |          11 |
| Christine |           9 |
| Gerald    |           9 |
| Amy       |           5 |
| Cat       |           4 |
| Lisa      |           0 |
| Lissa     |           0 |
| Mimi      |           0 |
+-----------+-------------+
	
	Please explain your findings and interpretation of the results:
	
	The data set is missing rows.  There are more funny or useful reviews than there are total reviews.  The error creates incorrect results.
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

SELECT 
CASE WHEN B.Stars between 2 and 3 then "Low"
  WHEN B.Stars between 4 and 5 then "High"
  ELSE "Terrible" END AS Rating,
COUNT(DISTINCT B.ID) as Businesses,
H.Hours

FROM
Business B 
LEFT JOIN Category C on C.business_id=B.id
LEFT JOIN Hours H on H.business_id=B.id

WHERE
C.Category = 'Restaurants'
AND B.City = 'Toronto'
AND H.business_id is not null

GROUP BY
Rating,H.hours


ii. Do the two groups you chose to analyze have a different number of reviews?

Reviews table does not have these rows. Using Reviews as the base, there are no rows that overlap.

SELECT 
CASE WHEN B.Stars between 2 and 3 then "Low"
  WHEN B.Stars between 4 and 5 then "High"
  ELSE "Terrible" END AS Rating,
COUNT(DISTINCT R.ID) as Reviews


FROM
Review R
left join Business B on B.id =R.business_id
LEFT JOIN Category C on C.business_id=B.id

WHERE
C.Category = 'Restaurants'
AND B.City = 'Toronto'
AND B.id is not null

GROUP BY
Rating
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Not with the data provided. There are too few businesses to make solid assumptions, though the Downtown Core isn't looking pretty.

+----------+------------------------+------------+
| Rating   | neighborhood           | Businesses |
+----------+------------------------+------------+
| High     |                        |          1 |
| High     | Etobicoke              |          1 |
| High     | High Park              |          1 |
| High     | Niagara                |          1 |
| High     | Willowdale             |          1 |
| Low      | Downtown Core          |          2 |
| Low      | Entertainment District |          1 |
| Terrible |                        |          1 |
| Terrible | Willowdale             |          1 |
+----------+------------------------+------------+

SQL code used for analysis:

SELECT 
CASE WHEN B.Stars between 2 and 3 then "Low"
  WHEN B.Stars between 4 and 5 then "High"
  ELSE "Terrible" END AS Rating,
  b.Neighborhood,
  COUNT(B.ID) as Businesses

FROM
Business B 
LEFT JOIN Category C on C.business_id=B.id

WHERE
C.Category = 'Restaurants'
AND B.City = 'Toronto'

GROUP BY Rating,Neighborhood
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Open restaurants have marginally better open rates.
SELECT 

CASE WHEN is_open = 1 then "Open"
 Else "Closed" END as Operating,
AVG(Stars)

FROM
Business B 

Group by 
Operating
         
         
ii. Difference 2: Open restaurants have many more reviews.
         
         
         
SQL code used for analysis:
SELECT 

CASE WHEN is_open = 1 then "Open"
 Else "Closed" END as Operating,
COUNT(B.review_count)

FROM
Business B 

Group by 
Operating
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
The correlation of having photographs with overall ratings
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

This analysis will have a few parts, both looking at how photos affect user ratings as well as whether the presence of photos indicate the success of a business.  This kind of analysis is important because it will measure whether having "Instagram Worthy" food is something for which a business should strive.  

The hypothesis is the presence of photos will increase success business.  To test this, we need to look at a few data points including:
* Count of Businesses with Photos
* Correlation of photo count to rating
* Breakout by type of photo
* Correlation of # of photos to rating
           
                  
iii. Output of your finished dataset:
+----------------+------------+
| Photo_Presence | Businesses |
+----------------+------------+
| Has Photo      |        651 |
| No Photo       |       9575 |
+----------------+------------+
+----------------+---------------+
| Photo_Presence |        Rating |
+----------------+---------------+
| Has Photo      | 3.73655913978 |
| No Photo       | 3.65587467363 |
+----------------+---------------+
      
+----------------+---------+--------+
| Photo_Presence | label   | Rating |
+----------------+---------+--------+
| Has Photo      | drink   |    3.8 |
| Has Photo      | food    |   3.73 |
| Has Photo      | inside  |   3.76 |
| Has Photo      | menu    |   3.25 |
| Has Photo      | outside |   3.72 |
| No Photo       | None    |   3.66 |
+----------------+---------+--------+

+-------+--------+------------+
| stars | Photos | Businesses |
+-------+--------+------------+
|   5.0 |     14 |          8 |
|   4.5 |    131 |         70 |
|   4.0 |    222 |        135 |
|   3.5 |    150 |         99 |
|   3.0 |     82 |         68 |
|   2.5 |     32 |         28 |
|   2.0 |     11 |          9 |
|   1.5 |      6 |          5 |
|   1.0 |      3 |          3 |
+-------+--------+------------+   
iv. Provide the SQL code you used to create your final dataset:

SELECT 
CASE WHEN P.business_id is null THEN "No Photo"
ELSE "Has Photo" END As Photo_Presence,
P.Label,
Avg(stars) as Rating,

--Count(B.ID) as Businesses

FROM 
Business B
Left JOIN Photo P on P.business_id = B.id


GROUP BY Photo_Presence, label
--------------------------------------------------------------------
SELECT
B.Stars,
COUNT(P.ID) As Photos,
COUNT(DISTINCT B.ID) as Businesses


FROM
Photo P
inner JOIN Business B on B.ID=P.Business_ID

GROUP BY B.stars

ORDER BY Stars DESC